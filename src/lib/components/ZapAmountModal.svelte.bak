<script lang="ts">
  import type { NDKEvent } from '@nostr-dev-kit/ndk';
  import { settings } from '$lib/stores/settings.svelte';

  interface Props {
    open: boolean;
    event: NDKEvent;
    onZap: (amount: number) => void;
    onCancel: () => void;
  }

  const { open, event, onZap, onCancel }: Props = $props();

  const amounts = [
    { value: 10, label: '10', emoji: 'â˜•' },
    { value: 21, label: '21', emoji: 'âš¡' },
    { value: 50, label: '50', emoji: 'ðŸ¤™' },
    { value: 100, label: '100', emoji: 'ðŸ’¯' },
    { value: 500, label: '500', emoji: 'ðŸ”¥' },
    { value: 1000, label: '1K', emoji: 'ðŸ’Ž' },
    { value: 2100, label: '2.1K', emoji: 'ðŸš€' },
    { value: 5000, label: '5K', emoji: 'ðŸ‘‘' }
  ];

  let selectedAmount = $state(settings.zap.defaultAmount);
  let customAmount = $state('');
  let isCustom = $state(false);

  function handleAmountSelect(amount: number) {
    selectedAmount = amount;
    isCustom = false;
    customAmount = '';
  }

  function handleCustomInput() {
    isCustom = true;
    const parsed = Number.parseInt(customAmount);
    if (!Number.isNaN(parsed) && parsed > 0) {
      selectedAmount = parsed;
    }
  }

  function handleZap() {
    if (selectedAmount > 0) {
      onZap(selectedAmount);
    }
  }

  function handleKeydown(e: KeyboardEvent) {
    if (e.key === 'Escape') {
      onCancel();
    } else if (e.key === 'Enter' && selectedAmount > 0) {
      handleZap();
    }
  }
</script>

{#if open}
  <div
    class="fixed inset-0 z-50 flex items-center justify-center bg-background/80 backdrop-blur-sm"
    onclick={onCancel}
    onkeydown={handleKeydown}
    role="button"
    tabindex="-1"
  >
    <div
      class="relative w-full max-w-md mx-4 bg-gradient-to-br from-neutral-900 to-black border-2 border-purple-600/30 rounded-3xl shadow-2xl shadow-purple-900/50 overflow-hidden"
      onclick={(e) => e.stopPropagation()}
      role="dialog"
      aria-modal="true"
    >
      <!-- Header with glow effect -->
      <div class="relative px-6 py-6 border-b border-purple-600/20 bg-gradient-to-r from-purple-900/20 to-pink-900/20">
        <div class="absolute inset-0 bg-gradient-to-r from-purple-600/10 to-pink-600/10 blur-xl"></div>
        <div class="relative flex items-center justify-between">
          <div class="flex items-center gap-3">
            <div class="w-12 h-12 rounded-full bg-gradient-to-br from-purple-600 to-pink-600 flex items-center justify-center shadow-lg shadow-purple-600/50">
              <span class="text-2xl">âš¡</span>
            </div>
            <div>
              <h2 class="text-xl font-bold text-foreground">Zap Amount</h2>
              <p class="text-sm text-purple-300">Choose your zap amount</p>
            </div>
          </div>
          <button
            onclick={onCancel}
            class="w-10 h-10 rounded-full hover:bg-white/10 transition-colors flex items-center justify-center"
            type="button"
            aria-label="Close"
          >
            <svg class="w-5 h-5 text-muted-foreground" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        </div>
      </div>

      <!-- Amount Grid -->
      <div class="p-6 space-y-6">
        <div class="grid grid-cols-4 gap-3">
          {#each amounts as amount}
            <button
              onclick={() => handleAmountSelect(amount.value)}
              class="group relative overflow-hidden rounded-2xl p-4 transition-all duration-200 {selectedAmount === amount.value && !isCustom
                ? 'bg-gradient-to-br from-purple-600 to-pink-600 shadow-lg shadow-purple-600/50 scale-105'
                : 'bg-gradient-to-br from-neutral-800 to-neutral-900 hover:from-neutral-700 hover:to-neutral-800 hover:scale-105'}"
              type="button"
            >
              <div class="absolute inset-0 bg-gradient-to-br from-white/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity"></div>
              <div class="relative flex flex-col items-center gap-2">
                <span class="text-2xl">{amount.emoji}</span>
                <span class="text-xs font-bold text-foreground">{amount.label}</span>
              </div>
            </button>
          {/each}
        </div>

        <!-- Custom Amount Input -->
        <div class="space-y-2">
          <label for="custom-amount" class="text-sm font-semibold text-purple-300">
            Custom Amount
          </label>
          <div class="relative">
            <input
              id="custom-amount"
              type="number"
              bind:value={customAmount}
              oninput={handleCustomInput}
              placeholder="Enter custom amount..."
              class="w-full px-4 py-4 bg-gradient-to-br from-neutral-800 to-neutral-900 border-2 {isCustom ? 'border-purple-600' : 'border-border'} rounded-2xl text-foreground placeholder-neutral-500 focus:outline-none focus:border-purple-600 transition-colors text-lg font-semibold"
            />
            <div class="absolute right-4 top-1/2 -translate-y-1/2 text-muted-foreground font-semibold">
              sats
            </div>
          </div>
        </div>

        <!-- Selected Amount Display -->
        {#if selectedAmount > 0}
          <div class="p-4 rounded-2xl bg-gradient-to-br from-purple-900/30 to-pink-900/30 border border-purple-600/30">
            <div class="flex items-center justify-between">
              <span class="text-sm text-purple-300">Selected Amount:</span>
              <span class="text-2xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent">
                {selectedAmount.toLocaleString()} sats
              </span>
            </div>
          </div>
        {/if}

        <!-- Action Buttons -->
        <div class="flex gap-3">
          <button
            onclick={onCancel}
            class="flex-1 px-6 py-4 rounded-2xl bg-gradient-to-br from-neutral-800 to-neutral-900 hover:from-neutral-700 hover:to-neutral-800 text-foreground font-semibold transition-all"
            type="button"
          >
            Cancel
          </button>
          <button
            onclick={handleZap}
            disabled={selectedAmount <= 0}
            class="flex-1 px-6 py-4 rounded-2xl bg-gradient-to-br from-purple-600 to-pink-600 hover:from-purple-500 hover:to-pink-500 disabled:from-neutral-700 disabled:to-neutral-800 disabled:cursor-not-allowed text-foreground font-bold shadow-lg shadow-purple-600/50 hover:shadow-purple-600/70 transition-all disabled:shadow-none flex items-center justify-center gap-2"
            type="button"
          >
            <span class="text-xl">âš¡</span>
            Zap {selectedAmount > 0 ? selectedAmount.toLocaleString() : ''}
          </button>
        </div>
      </div>
    </div>
  </div>
{/if}
